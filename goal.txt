The goal of this project in the end:


Server Commands:
ls - Lists all clients
lsteam - Lists all clients with a yes or no to connection
sel - List teams then list clients from each team to connect to
service - List all services


Service Shell: (Take in service)
ls - List all breaks and their purpose for the service
sel - Select a break to send (confirm before sending)
shell - Provides a shell that sends 
clients - lists clients that are currently connected



client shell
end - ends current connection 

main shell
reset - removes shell which removes IP from list and closes socket

NEED TO ADD:
1. Service shell
2. Custom breaks (open webserver on /, open webshell, stop service, etc.)
3. Add hostname to LS team and can tell if the service is up or not
4. Fix persistence
5. Fix keylogger 



Figure out how to parse IPs
Remove persistence from root to not disclose the IP
Remove listener on client
Fix keylogger to always log in a file at /var/notkeylogging.txt
Add callbacks to know what clients are connected
Tell server what IP addresses exist and what to expect, keep checking in to see if we still have a connection



#detect os, if its freebsd do ifconfig (uname -e)
else do ip a

uname -n gives hostname

beacon_ping from server returns beacon_pong from client